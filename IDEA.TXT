Current system
The current system operates as;
The enforcer would physicaly approach the case by using manual data from the witnesses and suspects; the enforcer would then use natural intelligence to identify 
potential criminal

Challenges of current system;
Slow and error prone due to reliance on manual data and natural intelligent reasoning
Lack of Technology Integration: natural intelligence lack advanced technology integration, limiting the ability to analyze complex datasets and identify 
suspects accurately




Proposed Idea;


I am designing and developing a crime detection system that would deal with cyber security related cases; As technology proceeds to grow, there is an increase
in cyber attack cases with potential suspects literally going unconvicted;
The system we are peoposing would have three actors; the law enforcer, the suspect and the witness;
The landing page would have the title of the system, a text field to enter the email address, a combobox to select whether he/she is enforcer, suspect or witness, 
two buttons;-"already have authentication code", and "request authentication code"; 


For the law enforcer, he would land on the landing page of the system, perform authentication requirements and upon successful authentication, he/she would be 
directed to the enforcer dashboard;
On the enforcer dashboard there are two buttons; "add case" and "view case report";
When the enforcer  clicks the add case button, on the enforcer dashboard he would be prompted to provide case details such as case id, case description, potential 
suspects, witnesse and case status(which is either open or closed- at time of adding the case the satus should be open by default; upon completion of the case, 
the case status would be closed); after adding the case and all its details then enfocer would be prompted to click the "add statement" button, 
where the enforcer would be prompted with statement fields such as , location area of the incident, date and time of the incident, the victim and other details;
When enforcer clicks "view case button" he would be able to view case report for that specific case he is presiding over and track the case progress;

For the suspect, he would land on the landing page and perform authorization requirements and upon successful authentication, he/she would be directed to the suspect 
dashboard;

On the suspect dashboard there are two buttons; "Testification" and "view case report";

When the suspect click the "Testification" button then the suspect would be prompted to testify by answering system generated questions; after answering all the 
questions  then the suspect would click the submit button and his/her testifications would be recorded appropriately by the system;
The suspect would be required to testify three times; these three testifications would be performed on three separate user sessions.
Data fusion algorithm would be used to counter_check the three responses from these three testifications to calculate the consistency score
Sentiment analysis angorithm would be used to take some suspect replies/responses  to calculate the emotion score, consistency score and confidence score

When suspect clicks "view case button" he would be able to view case report for that specific case he is testifying on and track the case progress;

For the witness, he/she would land on the landing page and perform aouthorization and upon successful authentication, he/she would be directed to the witness 
dashboard;

On the witness dashboard there is one buttons; "Testification"; 
When the witness clicks the "Testification" button  the witness would be prompted to testify by answering system generated questions; after answering all the 
questions  then the suspect would click the submit button and his/her testifications would be recorded appropriately by the system;
These questions would be generated based on the statement given by the enforcer earlier;
The answers that the witness would provide would be counter_checked with the enforcer statement by data fusion algorithm to ascertain the witness is right and 
saying the truth based on the case details;
Witness should also testify twice; and these data would also be self counter_checked to identify whether the testification is right/correct; once a testification is 
correct it would be recorded under correct testifications in the case table;


After all these; the suspect age, gender, drugtest, consistency score, confidence score, emotion score, number of correct witness testifications would be passed to a 
machine learning model that would be able to predict whether the suspect is a potential criminal or not;
The model output would then be loaded to the database and these should form the case report






Use case model Explanation;
User access system, user land on the land page;
Land page has 1 text field for email address; one combobox field to choose role(ie enforcer, witness, suspect); two buttons "already have authorization code" and 
"request authorization code";
When a user click request authorization code; then a system generated code would be sent to the user's email; this code would be used as the authorization code; the 
user would then be redirected to the landing page now to enter the authentication code to access the system upon successful authentication;

When user clicks "already have authentication code", then the user would be prompted to enter the authentication code; the user would choose from the combobox his/her 
role(ie enforcer, witness or suspect)

Witness would be directed to the witness dashboard;
Suspect would be directed to the suspect dashboard;
Enforcer would be directed to the enforcer dashboard;

On the enforcer dashboard there are three buttons;, "add case", "view case report" and "add statement";
When enforcer clicks "add case button", the enforcer would be prompted to enter case details as shown;
        i). case_id
       ii). case_description
      iii). case_status; (which is ether open or closed; closed if the case is complete such as; enforcer has written statement, witness has testified, suspect 
has testified and potential criminal has already been predicted by the machine learning model base on the data from enforcer, witness and suspect; The case is open 
if any of thes(enforcer has written statement, witness has testified, suspect 
has testified and potential criminal has already been predicted by the machine learning model base on the data from enforcer, witness and suspect) has not been done)
The above 3 would be stored in the case table in the database with case_id as the primary key;
Then the law enforcer would be prompted to provide other case details; here he would specify the number of suspects and witnesses


For the suspects, the system would use a loop to capture the suspect details based on the number of suspects entered by the enforcer;Suspect details would be as 
follows;
        i). suspect_id
       ii). case_id
      iii). First Name
       iv). Last Name
        v). Gender
       vi). DOB(Date of Birth- this would be used by the system to calculate age which would also be stored as another column)
      vii). Drug test(this would be stored as a boolean value ie true or false)
     viii). Testified(this would store a boolean value that is false when the suspect hasn't testified or true when the suspect has testified- at time of inserting 
            details it should be false and it would change after the suspect has testified)
       ix). Testifications; (this would come from data fusion; at time of recording the suspect it should be 0; it would be incremented based on number of true testifications 
                              by the witnesses)
Suspect details would be stored in the suspect table with suspect_id and case_id as the composite key


For the witnesses, the system would use a loop to capture the witnesses details based on the number of witnesses entered by the enforcer; witnesses details would be as 
follows; Suspect details would be stored in the suspect table with suspect_id and case_id as the composite key.
        i). witness_id
       ii). case_id
      iii). First Name
       iv). Last Name
     viii). Testified(this would store a boolean value that is false when the suspect hasn't testified or true when the witness has testified- at time of inserting 
            details it should be false and it would change after the witness has testified)
Witnesses details would be stored in the witness table with witness_id and case_id as the composite key.


After adding all these case details, the enforcer would click "submit" button to confirm submission of all the case details; from case details to suspect details to 
witness details; after submission confirmation; all these details and informations would be pushed to the database into their respective tables;
After submission, the enforcer would be asked to write his statement; the statement would comprise of the following;
          i). Location of the incident(This would be name of a place eg Nyakuru Village)
         ii). Victim of the incident   (This would be name of a person eg Dennis Omondi)
        iii). Date of the incident     (This would be in 24 hr format eg 1630)
         iv). Time of the incident      (This would be in date format with date, month, year eg 24,December,2023)
All these details would be stored in a dictionary called statement(This dictionary would be imported to the "data fusion" module to help in counter_checking against 
witness testification to ascertain true testification).

The enforcer would also be able to view case report when he clicks the "view case report" button; case information such as case_id, case_description, suspects name
(botn first and second), witness name(both first and second), case status(open or closed)

On the witness dashboard; there is "testify" button;.
When the witness clicks "testify" button, he/she would be prompted by the system to make his/her testifications; Testification should be presented in form of answers 
to question that are system generated(based on the enforcer statement); The testification questions should be detailed as follows;
          i). Location of the incident(This would be name of a place eg Nyakuru Village)
         ii). Victim of the incident   (This would be name of a person eg Dennis Omondi)
        iii). Date of the incident     (This would be in 24 hr format eg 1630)
         iv). Time of the incident      (This would be in date format with date, month, year eg 24,December,2023)
          v). Potential suspect     (Witness should provide only one potential suspect)
All these details would be stored in a dictionary called testification(This dictionary would be imported to the "data fusion" module to help in counter_checking 
against the statement provided by the enforcer;); The result from data fusion should be either one true testification against the convicted criminal by the witness 
or no testification for that convicted criminal by the suspect; If data fusion provide that the witness testification is true then 1 true testification is added 
against the convicted criminal name else 0 is added;



On the suspect dashboard, there are two buttons; "prove innocence/testify" and "view case report";.
When the suspect clicks "testify" button, he/she would be prompted by the system to make his/her testifications; Testification should be presented in form of answers 
to question that are system generated(based on the enforcer statement); The testification questions should be detailed as follows;
             i). Where the suspect was when the incident occurred ?
            ii). Whether the suspect knows the suspect ?
           iii). Any conflict between the suspect and victim ?
            iv). Whether the suspect was at the location of the incident when the incident occurred ?
             v). Whether the victim has wronged the suspect ?
            vi). Whether the suspect has been involved in such case before ?

All the answers to these questions would be passed to the sentiment analysis module which would use the answers to calculate the emmotion score, confidence score and 
consistency score; All these information should be store with the suspect id in a dictionary called suspect_scores;-


Suspect_id, age, gender, drug test, data fusion result(number of testifications) and data from suspect_scores dictionary content(emmotion score, confidence score, and consistency score) 
would be passed to a machine learning model that would then predict the potential criminal; The model should then push its prediction to the the database in a table 
called prediction table; These details would be recorded to the prediction table; case_id, suspect_id,result(criminal or not); This would then be used when deriving 
case report; 